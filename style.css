:root {
  /* prevent zooming while tapping fast on iOS */
  touch-action: pan-x pan-y;
  --default-min-font-size-px: 12px;
  --default-min-font-size: 12;
  --default-max-font-size-px: 18px;
  --default-max-font-size: 18;
}

html, body {
  /* prevent pull-to-refresh */
  overscroll-behavior: none;
  overflow: hidden;
}

html {
  /* see: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/#comment-1769978 - comment by MaxDesign */
  font-size:calc(var(--default-min-font-size-px) + (var(--default-max-font-size) - var(--default-min-font-size)) * ((100vw - 360px) / 1560));
  font-size: clamp(var(--default-min-font-size-px), calc(var(--default-min-font-size-px) + (var(--default-max-font-size) - var(--default-min-font-size)) * ((100vw - 360px) / 1560)), var(--default-max-font-size-px));
}

body {
  font-family: Verdana, Helvetica, sans-serif;
  font-size: 2em;
  color: #fff;
  background-color: #555;
  margin: 6vmin;
  padding: 0;
  height: calc(100svh - 12vmin);
}

main {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 1.25em;
  overflow: hidden;
  font-size: 0.75em;
}

.wrapper {
  flex-grow: 0;
}

a {
  color: #fff;
  cursor: pointer;
}

/* these items don't use body font if not explicit inherit */
input, select, textarea, button {
  font-family: inherit;
}

ul {
  padding-inline-start: 7vmin;
}

li {
  margin-bottom: 1vmin;
}

img {
  -webkit-filter: invert(100%); /* safari 6.0 - 9.0 */
          filter: invert(100%);
}

img.icon {
  width: 75%;
  height: 75%;
  margin: auto;
  display: block;
}

button {
  font-size: inherit;
  color: #fff;
  background-color: #444;
  cursor: pointer;
  margin: 0.5vmin;
  padding: 0px;
  height: 5.3vmin;
  width: 4.4vmin;
  border: 1px solid #fff;
  border-radius: 2px;
}

button:focus {
  outline: 0;
}

button.big {
  height: 1.25em;
  max-height: 45px;
  width: 1em;
  max-width: 36px;
  font-size: 2em;
}

.key_button {
  display: inline-block;
  font-size: 0.8em;
  line-height: 0.8em;
  border: 1px solid #fff;
  border-radius: 0.4em;
  text-align: center;
  padding-left: 1vmin;
  padding-right: 1vmin;
  padding-top: 0.5vmin;
  padding-bottom: 0.5vmin;
}

.coursorpointer {
  cursor: pointer !important;
}

.big6 {
  display: flex;
  flex-grow: 0;
  column-gap: 1.5em;
  align-items: flex-end;
  justify-self: center;
  justify-content: center;
}

#popup {
  padding: 6vmin;
}

.popup {
  font-size: 3vmin;
  line-height: 3vmin;
  width: 3vmin;
  text-align: center;
  color: #fff;
  cursor: pointer;
}

/* The actual popup (appears on top) */
.popup .popuptext {
  font-size: 1.6em;
  overflow-y: scroll;
  visibility: hidden;
  text-align: left;
  font-weight: normal;
  background-color: #555;
  width: calc(100vw - 12vmin);
  height: calc(100vh - 12vmin);
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
}

.popuptext {
  vertical-align: top;
  border: 0;
  line-height: normal;
}

/* Popup arrow */
.popup .popuptext::after {
  display: none;
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
}

/* Toggle this class when clicking on the popup container
(hide and show the popup) */
.popup .show {
  visibility: visible;
  -webkit-animation: fadeIn 0s;
  animation: fadeIn 0s
}

.checkbox-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 20px;
}

.checkbox-container-small {
  gap: 0px;
  justify-items: center;
  width: fit-content;
  justify-self: center;
}

input[type="checkbox"] {
  width: 40px;
  height: 40px;
  appearance: none;
  -webkit-appearance: none;
  border: 2px solid #fff;
  border-radius: 50%;
  outline: none;
  cursor: pointer;
}

.checkbox-container-small > input[type="checkbox"] {
  width: 30px;
  height: 30px;
}

input[type="checkbox"]:checked {
  background-color: #fff;
}

.column {
  display: grid;
  gap: 10px;
  justify-items: center;
  align-self: center;
}

.menu {
  display: grid;
  justify-content: center;
}

#textausgabe {
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
  flex-grow: 1;
  font-size: 1.25em;
  cursor: pointer;
  overflow-y: auto;
}

#textausgabe > div {
  padding: 5px;
}

.space {
  white-space: pre;
}

.selected-character {
  background-color: #888;
}

#popup > p {
  line-height: 1.25em;
}

.braille-symbol {
  font-size: 1.5em;
  vertical-align: sub;
}

.braille-symbol-gross {
  font-size: 3em;
  vertical-align: middle;
  line-height: 0.75em;
}

.braille-symbol-klein {
  margin-left: 0.35em;
  margin-right: 0.35em;
}

.manual-icon {
  height: 1.25em;
  max-height: 45px;
  width: 1em;
  max-width: 36px;
  font-size: 1.25em;
  margin-right: 0.25em;
  vertical-align: middle;
  border: 1px solid black; /* black weil invertiert */
  padding: 3px;
  border-radius: 2px;
  background-color: #bbb; /* ist auch die invertierte Farbe */
}

.manual-icon-char {
  height: 1.25em;
  max-height: 45px;
  width: 1em;
  max-width: 36px;
  font-size: 1.25em;
  margin-right: 0.25em;
  vertical-align: middle;
  border: 1px solid white;
  padding: 3px;
  padding-left: 0.4em;
  padding-right: 0.4em;
  line-height: 1.7em;
  border-radius: 2px;
  background-color: #444;
}

.menu {
  display: grid;
  justify-content: center;
  /* so viele 'auto' wie Buttons nebeneinander */
  grid-template-columns: auto auto;
  gap: 10px;
}

/* das ist ca. der Moment, wo dann der Text hochkant mehr Inhalt fasst */
@media (orientation: landscape) and (min-aspect-ratio: 1.35) {
  main {
    flex-direction: row;
  }
  .big6 {
    column-gap: 0.75em;
    align-self: flex-end;
  }
}

/* Menüknöpfe untereinander anordnen */
@media (orientation: landscape){
  .menu {
    grid-template-columns: auto;
  }
}

/* iPhone 13 mini z.B. ohne Adressleiste */
@media (max-aspect-ratio: 0.5) {
  .big6 {
    /* damit man nicht ständig über den Strich nach unten wischt
    und damit den Webview halb nach unten schiebt */
    margin-bottom: 2em;
  }
}
